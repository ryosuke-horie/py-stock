# 単体テスト自動実行のCIワークフロー
name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        
    - name: Create virtual environment
      run: uv venv
      
    - name: Sync dependencies
      run: uv sync --extra dev
      
    - name: Run linting with flake8
      run: |
        uv run flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        uv run flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Run type checking with mypy
      run: |
        echo "型チェックをスキップ（将来的に型アノテーションを追加予定）"
        # uv run mypy src/ --ignore-missing-imports --no-strict-optional --allow-untyped-defs
      
    - name: Run tests with pytest
      run: |
        uv run pytest tests/ \
          --cov=src \
          --cov-branch \
          --cov-report=term-missing \
          --cov-fail-under=20 \
          -v \
          --ignore=tests/unit/test_risk_manager.py \
          --ignore=tests/unit/test_technical_indicators.py \
          --ignore=tests/unit/test_signal_generator.py \
          --ignore=tests/unit/test_support_resistance.py
        
    - name: Run security check
      run: |
        # 基本的なセキュリティチェック
        uv run python -m pip check
        
    - name: Clean up
      if: always()
      run: |
        # 仮想環境のクリーンアップ
        rm -rf .venv